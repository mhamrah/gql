// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/mhamrah/gql (interfaces: Service)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	gql "github.com/mhamrah/gql"
)

// Mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *_MockServiceRecorder
}

// Recorder for MockService (not exported)
type _MockServiceRecorder struct {
	mock *MockService
}

func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &_MockServiceRecorder{mock}
	return mock
}

func (_m *MockService) EXPECT() *_MockServiceRecorder {
	return _m.recorder
}

func (_m *MockService) Handlers() map[string]gql.HandlerFunc {
	ret := _m.ctrl.Call(_m, "Handlers")
	ret0, _ := ret[0].(map[string]gql.HandlerFunc)
	return ret0
}

func (_mr *_MockServiceRecorder) Handlers() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Handlers")
}
